/addworld -Tlp 3K 3k.org 3000

; Math stuff
/def -i ++ = /test %{1} := %{1} + 1
/def -i -- -- = /test %{1} := %{1} - 1
/def -i +N = /test %{1} := %{1} + %{2}
/def -i -- -N = /test %{1} := %{1} - %{2}

; For delaying execution of stuff
/def delay = /repeat -%{1} 1 %{2}

; Setup dynamic wimpycommand execution
/def dowimpy = /eval -s0 %{*}

; catch heartbeat death
/def -p0 -mregexp -t'Game driver tells you: You have no heart beat' restarthb = kickstart

; store wimpy levels
/def storewimpyhp = /eval /set wimpyminhp_tmp $[wimpyminhp]
/def storewimpypu = /eval /set wimpyminpu_tmp $[wimpyminpu]
/def storewimpysp = /eval /set wimpyminsp_tmp $[wimpyminsp]

; Restore wimpy levels from _tmp
/def restorewimpyhp = /eval /set wimpyminhp $[wimpyminhp_tmp]
/def restorewimpypu = /eval /set wimpyminpu $[wimpyminpu_tmp]
/def restorewimpysp = /eval /set wimpyminsp $[wimpyminsp_tmp]

; HP Bar triggers and stuff
/set status_fields=hpbar hpbar:30
/def -p21 -F -mregexp -t'^H\\:([0-9]+)\/([0-9]+) S\\:([0-9]+)\/([0-9]+) P\\:([0-9]+)\/([0-9]+)\(([0-9]+)\) .* Gexp\\:([0-9]+) .* RC\\:([0-9]+)' parsehp = \
     /set curhp %P1%; \
     /set maxhp %P2%; \
     /set cursp %P3%; \
     /set maxsp %P4%; \
     /set curpu %P5%; \
     /set maxpu %P6%; \
     /set spu %P7%; \
     /set gxp %P8%; \
     /set rc %P9%; \
     /eval /set hppercent $[curhp / maxhp * 100]%; \
     /eval /set gxpdiff $[gxp - lastgxp]%; \
     /eval /set rcdiff $[rc - lastrc]%; \
     /eval /set lastgxp $[gxp]%; \
     /eval /set lastrc $[rc]%; \
     /if (echodiffs =~ "on") /eval /echo "GXP: $[gxpdiff], RC: $[rcdiff]"%; /endif
/def -p19 -F -mregexp -t'^H\\:' recharger = /if ((curpu + spu <= maxpu) & (spu > 0)) recharge%; /endif
/def -p18 -F -mregexp -t'^H\\:' smartwimpy = \
     /if ( \
     	 (wimpypercent != 0 & hppercent < wimpypercent) | \
	 (wimpyminhp != 0 & curhp < wimpyminhp) \
     ) \
     /eval /set outofhp $[outofhp + 1]%; \
     /eval /dowimpy $[outofhpcommand]%; \
     /elseif ( \
	 (wimpyminpu != 0 & curpu < wimpyminpu) \
     ) \
     /eval /set outofpu $[outofpu + 1]%; \
     /eval /dowimpy $[outofpucommand]%; \
     /elseif ( \
         (wimpyminsp != 0 & cursp < wimpyminsp) \
     ) \
     /eval /set outofsp $[outofsp + 1]%; \
     /eval /dowimpy $[outofspcommand]%; \
     /endif

/def -p10 -ag -mregexp -t'^H\\:.*$' hptracker = /eval /set hpbar %P0 GXPDiff: $[gxpdiff] RCDiff: $[rcdiff]

; Kill trigger + notification
/def -p10 -F -mregexp -t'^(Syd|Loki) dealt the killing blow to ([a-zA-Z0-9 ]+)' getall = \
     gac%;pab%;dog feed%;dog play%;dog pet%; \
     /eval /sys echo "%P1 killed %P2 and ran out of hp:pu:sp $[outofhp]:$[outofpu]:$[outofsp] times" >> /tmp/mudfeedbot%; \
     /set outofhp 0%; \
     /set outofsp 0%; \
     /set outofpu 0%;

; corpse farming trigger - individual modules should override the /donatecorpses macro
/def -p10 -F -mregexp -t'The coffin is full' corpsefarmer = /if (corpsefarming == 1) /donatecorpses%; /endif
/def donatecorpses = 'I need to do something with all these corpses!

; Ability triggers, status bookkeeping
/def -p0 -mregexp -t'Energy Field Collapsing' efieldoff = /set efield_up no
/def -p0 -mregexp -t'Energy Field deactivation complete' efieldoff2 = /set efield_up no
/def -p0 -mregexp -t'Raising Perimeter Energy Field' efieldon = /set efield_up yes

; Start and stop healing at the infirmary
/def starthealing = \
     /storewimpyhp%; \
     /storewimpypu%; \
     /set wimpyminhp 0%; \
     /set wimpyminpu 0%; \
     /set healing yes%; \
     /if ((efield_up =~ "yes") & (use_efield =~ "yes")) efield%;efield%; /endif%; \
     admit myself
/def stophealing = \
     /restorewimpyhp%; \
     /restorewimpypu%; \
     /set healing no%; \
     /if ((efield_up =~ "no") & (use_efield =~ "yes")) efield%; /endif%; \
     edna

; Basic navigation
/def chaostoguild = s%;e%;e%;s%;s%;s%;s%;s%;s%;s%;se%;activate pillar
/def sciencetoguild = w%;w%;s%;s%;s%;s%;se%;activate pillar%;
/def fantasytoguild = e%;e%;e%;s%;e%;e%;e%;e%;s%;s%;s%;se%;activate pillar%;
/def chaostoinf = /chaostoguild%;/exittoinf
/def sciencetoinf = /sciencetoguild%;/exittoinf
/def fantasytoinf = /fantasytoguild%;/exittoinf
/def exittoinf = e%;u%;u%;n%;n%;e%;/starthealing
/def infirmarytoexit = w%;s%;s%;d%;d%;w%;

; Automatically recharge from SPU when admitted to the infirmary
/def -p0 -mregexp -t'with needles and scalpels. You begin to feel better' recharge = recharge%;/delay 40 recharge%;

; efield is starting to get both more expensive and more necessary.  If it collapses in combat and can't be raised,
; we need to get out of there.  So treat it as having run out of PU
/def -p0 -mregexp -t'Power Not Sufficient For Field Activation' cantraisefield = /if (healing !~ "yes") /eval /dowimpy $[outofpucommand]%; /endif%;

; unidler stuff
/def doRandomAction = \
     /set roll $[rand(1,6)]%; \
     /if (roll == 1) \
     	  hp%; \
     /elseif (roll == 2) \
     	  gs%; \
     /elseif (roll == 3) \
     	  gs2%; \
     /elseif (roll == 4) \
     	  rcost%; \
     /elseif (roll == 5) \
     	  gwho%; \
     /else \
          sc%; \
     /endif
/def unidle = /if (unidler =~ "on") /doRandomAction%; /endif%;/repeat -$[rand(200,300)] 1 /unidle%;

; Had some trouble where synthorg would turn off.  Let's catch it and reactivate
/def -p0 -mregexp -t'^\[> Attacks <\] \[--------\] \[ images \] \[--------\] \[--------\]' activatesynth = synthorg activate 

; write stuff to IRC bot
/def -p0 -F -mregexp -t'([a-zA-Z]+) tells you: (.*)$' reporttell = /sys echo "%P1 told you: %P2" >> /tmp/mudfeedbot%;
/def -p0 -F -mregexp -t'Syd has been slain' reportdeath = /sys echo "You might have died!" >> /tmp/mudfeedbot%;
/def -p0 -F -mregexp -t'Stippytobin' reportstippy = /sys echo "Someone stippy'd!" >> /tmp/mudfeedbot%;
/def -p0 -F -mregexp -t'([a-zA-Z]+) \[Gen-Alpha\] : (.*)$' reportcomm = /sys echo "%P1 comm'd: %P2" >> /tmp/mudfeedbot%;
/def fromfile = /quote -dexec !"cat /tmp/deeftobdum"%;
/repeat -5 1 /fromfile
